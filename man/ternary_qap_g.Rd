% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ternary_qap_g.R
\name{ternary_qap_g}
\alias{ternary_qap_g}
\title{QAP Ternary Diagram for Gabbroic Rocks}
\usage{
ternary_qap_g(
  output = c("ggplot", "plotly"),
  language = c("en", "es"),
  opacity = 0.5
)
}
\arguments{
\item{output}{The output format: "ggplot" or "plotly" (default is "ggplot")}

\item{language}{The language to be displayed: "en" for english or "es" for spanish (deafult is "en")}

\item{opacity}{Transparency level (default is 0.5)}
}
\value{
QAP ternary diagram for gabbroic rocks in the desired format (object)
}
\description{
\code{ternary_qap_g()} draws either a static or interactive ternary diagram, in english or spanish. It is a base diagram where data can be ploted.
}
\details{
For ploting data on the ggplot object it would be easier if the names of the dataframe are "cpx", "p", and "opx", that way it gets mapped automatically, if not make sure to use "aes(x=cpx,y=p,z=opx)".
For ploting on the plotly object the mapping of the new data should be as shown in the example: \code{a = ~p, b = ~cpx, c = ~opx}, where \code{a} refers to the top ("p"), \code{b} refers to the bottom left ("cpx"), and \code{c} refers to the bottom right ("opx").
The examples show basic usage and how to add data, which can be more customizable.
}
\examples{
library(ggplot2)
library(plotly)

d = data.frame(p=c(23,26.9,25.3),
               cpx=c(27,23.7,5.1),
               opx=c(50,49.4,59.6))

# adding data to ggplot object
ternary_qap_g() + geom_point(data = d)

# adding data to plotly object
ternary_qap_g('plotly') \%>\%
add_trace(a = ~p, b = ~cpx, c = ~opx,
          data = d,
          name = 'My data',
          type = "scatterternary",
          mode = "markers",
          marker = list(size=8,color='coral',symbol=3,opacity=.9),
          hovertemplate = paste0('P: \%{a}<br>',
                                 'Cpx: \%{b}<br>',
                                 'Opx: \%{c}'))

}
